{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tgoan\\\\Desktop\\\\Web Development\\\\Projects\\\\barnwood\\\\src\\\\components\\\\public-components\\\\login.js\";\nimport React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useAuth, useRole } from \"../../context/auth\";\nimport { Col, Form, Button } from \"react-bootstrap\";\n\nfunction Login(props) {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setAuthTokens\n  } = useAuth();\n  const {\n    setRoleTokens\n  } = useRole();\n  /* referer is set up like this because originally going from a public route to login.js would crash with \"props.location.state\r\n  is undefined\" and const referer = props.location.state.referer || \"/\"; would not work correctly */\n\n  let referer;\n\n  if (props.location.state !== undefined) {\n    referer = props.location.state.referer;\n  } else {\n    referer = \"/\";\n  }\n\n  function postLogin() {\n    axios.post(\"http://localhost:4000/users/login\", {\n      username,\n      password\n    }).then(res => {\n      if (res.status === 200) {\n        setAuthTokens(res.data);\n        setRoleTokens(res.data.isAdmin);\n        setLoggedIn(true);\n      } else {\n        setIsError(true);\n      }\n    }).catch(err => {\n      console.log(err);\n      setIsError(true);\n    });\n  }\n\n  if (isLoggedIn) {\n    return React.createElement(Redirect, {\n      to: referer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Login\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    sm: {\n      span: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"formUsername\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Username\"), React.createElement(Form.Control, {\n    controlid: \"formUsername\",\n    type: \"username\",\n    value: username,\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    placeholder: \"Enter username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    sm: {\n      span: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"formPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Form.Control, {\n    controlid: \"formPassword\",\n    type: \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    placeholder: \"Enter password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    onClick: postLogin,\n    variant: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Login\")), React.createElement(Link, {\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Don't have an account?\"), isError && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"There was a problem logging in!\"));\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/tgoan/Desktop/Web Development/Projects/barnwood/src/components/public-components/login.js"],"names":["React","useState","Link","Redirect","axios","useAuth","useRole","Col","Form","Button","Login","props","isLoggedIn","setLoggedIn","isError","setIsError","username","setUserName","password","setPassword","setAuthTokens","setRoleTokens","referer","location","state","undefined","postLogin","post","then","res","status","data","isAdmin","catch","err","console","log","span","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useAuth, useRole } from \"../../context/auth\";\r\nimport { Col, Form, Button } from \"react-bootstrap\";\r\n\r\nfunction Login(props) {\r\n    const [isLoggedIn, setLoggedIn] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [username, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const { setAuthTokens } = useAuth();\r\n    const { setRoleTokens } = useRole();\r\n\r\n    /* referer is set up like this because originally going from a public route to login.js would crash with \"props.location.state\r\n    is undefined\" and const referer = props.location.state.referer || \"/\"; would not work correctly */\r\n    let referer;\r\n    if(props.location.state !== undefined) {\r\n        referer = props.location.state.referer;\r\n    } else {\r\n        referer = \"/\";\r\n    }\r\n\r\n    function postLogin() {\r\n        axios.post(\"http://localhost:4000/users/login\", {\r\n            username, password\r\n        }).then(res => {\r\n            if (res.status === 200) {\r\n                setAuthTokens(res.data);\r\n                setRoleTokens(res.data.isAdmin);\r\n                setLoggedIn(true);\r\n            } else {\r\n                setIsError(true);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n            setIsError(true);\r\n        });\r\n    }\r\n\r\n    if(isLoggedIn) {\r\n        return <Redirect to={referer} />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h2>Login</h2>\r\n            <Form>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} sm={{ span: 6 }}>\r\n                        <Form.Label htmlFor=\"formUsername\">Username</Form.Label>\r\n                        <Form.Control\r\n                                    controlid=\"formUsername\"\r\n                                    type=\"username\"\r\n                                    value={username}\r\n                                    onChange={e => {\r\n                                        setUserName(e.target.value);\r\n                                    }}\r\n                                    placeholder=\"Enter username\"\r\n                                    />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} sm={{ span: 6 }}>\r\n                        <Form.Label htmlFor=\"formPassword\">Password</Form.Label>\r\n                        <Form.Control\r\n                                    controlid=\"formPassword\"\r\n                                    type=\"password\"\r\n                                    value={password}\r\n                                    onChange={e => {\r\n                                        setPassword(e.target.value);\r\n                                    }}\r\n                                    placeholder=\"Enter password\"\r\n                                    />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button onClick={postLogin} variant=\"success\">Login</Button>\r\n            </Form>\r\n            <Link to=\"/register\">Don't have an account?</Link>\r\n            { isError &&<p>There was a problem logging in!</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}