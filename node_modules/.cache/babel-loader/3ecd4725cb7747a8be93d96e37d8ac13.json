{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tgoan\\\\Desktop\\\\Web Development\\\\Projects\\\\barnwood\\\\src\\\\components\\\\public-components\\\\userDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction UserDetails(props) {\n  const [isError, setIsError] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [messages, setMessages] = useState([]);\n\n  const Message = props => React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.message.content)));\n\n  useEffect(() => {\n    axios.get(`http://localhost:4000/users/${props.match.params.id}`).then(res => {\n      setUsername(res.data.user.username);\n      setIsAdmin(res.data.user.isAdmin);\n      setMessages(res.data.messages);\n    }).catch(function (err) {\n      setIsError(true);\n    });\n  }, [props]);\n\n  function messageList() {\n    return messages.map(function (currentMessage, i) {\n      return React.createElement(Message, {\n        message: currentMessage,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, username, \" \", isAdmin ? \"(Admin)\" : \"(User)\"), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: {\n      span: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Active Messages\"), messages != [] ? messageList() : \"No active messages\"), React.createElement(Col, {\n    md: {\n      span: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"(Orders should go here when user is logged in)\")), isError && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Something went wrong with getting the user!\"));\n}\n\nexport default UserDetails;","map":{"version":3,"sources":["C:/Users/tgoan/Desktop/Web Development/Projects/barnwood/src/components/public-components/userDetails.js"],"names":["React","useState","useEffect","Row","Col","Card","axios","UserDetails","props","isError","setIsError","username","setUsername","isAdmin","setIsAdmin","messages","setMessages","Message","message","content","get","match","params","id","then","res","data","user","catch","err","messageList","map","currentMessage","i","span"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMgB,OAAO,GAAGT,KAAK,IACjB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACU,OAAN,CAAcC,OADnB,CADJ,CADJ,CADJ;;AAUAjB,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACc,GAAN,CAAW,+BAA8BZ,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBC,EAAG,EAA/D,EACCC,IADD,CACMC,GAAG,IAAI;AACTb,MAAAA,WAAW,CAACa,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAchB,QAAf,CAAX;AACAG,MAAAA,UAAU,CAACW,GAAG,CAACC,IAAJ,CAASC,IAAT,CAAcd,OAAf,CAAV;AACAG,MAAAA,WAAW,CAACS,GAAG,CAACC,IAAJ,CAASX,QAAV,CAAX;AACH,KALD,EAKGa,KALH,CAKS,UAASC,GAAT,EAAc;AACnBnB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAPD;AAQH,GATQ,EASN,CAACF,KAAD,CATM,CAAT;;AAWA,WAASsB,WAAT,GAAuB;AACnB,WAAOf,QAAQ,CAACgB,GAAT,CAAa,UAASC,cAAT,EAAyBC,CAAzB,EAA2B;AAC3C,aAAO,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAED,cAAlB;AAAkC,QAAA,GAAG,EAAEC,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,CAAP;AAGH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKtB,QAAL,OAAgBE,OAAO,GAAK,SAAL,GAAqB,QAA5C,CADJ,EAGI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEqB,MAAAA,IAAI,EAAE;AAAR,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEKnB,QAAQ,IAAI,EAAZ,GACGe,WAAW,EADd,GAGG,oBALR,CADJ,EASI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDATJ,CAHJ,EAgBMzB,OAAO,IAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAhBhB,CADJ;AAoBH;;AAED,eAAeF,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction UserDetails(props) {\r\n    const [isError, setIsError] = useState(false);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const Message = props => (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Text>\r\n                    {props.message.content}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:4000/users/${props.match.params.id}`)\r\n        .then(res => {\r\n            setUsername(res.data.user.username);\r\n            setIsAdmin(res.data.user.isAdmin);\r\n            setMessages(res.data.messages);\r\n        }).catch(function(err) {\r\n            setIsError(true);\r\n        })\r\n    }, [props]);\r\n\r\n    function messageList() {\r\n        return messages.map(function(currentMessage, i){\r\n            return <Message message={currentMessage} key={i} />;\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h2>{username} {isAdmin ? ( \"(Admin)\" ) : ( \"(User)\" )}</h2>\r\n\r\n            <Row>\r\n                <Col md={{ span: 6 }}>\r\n                    <h3>Active Messages</h3>\r\n                    {messages != [] ? (\r\n                        messageList()\r\n                    ) : (\r\n                        \"No active messages\"\r\n                    )}\r\n                </Col>\r\n                <Col md={{ span: 6 }}>\r\n                    (Orders should go here when user is logged in)\r\n                </Col>\r\n            </Row>\r\n            { isError &&<p>Something went wrong with getting the user!</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDetails;"]},"metadata":{},"sourceType":"module"}