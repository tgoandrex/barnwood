{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tgoan\\\\Desktop\\\\Web Development\\\\Projects\\\\barnwood\\\\src\\\\components\\\\public-components\\\\productDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useID, useUserName, useAdmin } from \"../../context/auth\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { Button, Accordion, Card, ListGroup, Form, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction ProductDetails(props) {\n  const [isError, setIsError] = useState(false);\n  const [id, setID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [stock, setStock] = useState(0);\n  const [quantity, setQuantity] = useState(0);\n  const [messages, setMessages] = useState([]);\n  const {\n    IDTokens\n  } = useID();\n  const {\n    userNameTokens\n  } = useUserName();\n  const {\n    adminTokens\n  } = useAdmin();\n  useEffect(() => {\n    axios.get(`http://localhost:4000/products/${props.match.params.id}`).then(res => {\n      setID(res.data.product._id);\n      setName(res.data.product.name);\n      setDescription(res.data.product.description);\n      setPrice(res.data.product.price);\n      setStock(res.data.product.stock);\n      setMessages(res.data.messages);\n    }).catch(function (err) {\n      setIsError(true);\n    });\n  }, [props, IDTokens]);\n\n  const Message = props => React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.message.owner.username === \"(User removed)\" ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.message.owner.username) : React.createElement(Link, {\n    to: `/users/${props.message.owner.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.message.owner.username)), React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, props.message.content), IDTokens === props.message.owner.id || adminTokens ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/products/list/${id}/messages/${props.message._id}/edit/`,\n    style: {\n      marginRight: 10,\n      marginLeft: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(Link, {\n    to: `/products/list/${id}/messages/${props.message._id}/delete/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Delete\")) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n\n  function messageList() {\n    return messages.map(function (currentMessage, i) {\n      return React.createElement(Message, {\n        message: currentMessage,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    });\n  }\n\n  function paypalBtn() {\n    return React.createElement(PayPalButton, {\n      amount: price * quantity // shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\n      ,\n      createOrder: (data, actions) => {\n        let productInfo = {\n          id,\n          name,\n          description,\n          price,\n          quantity\n        };\n        let orderInfo = {\n          owner: {\n            id: IDTokens,\n            username: userNameTokens\n          },\n          status: \"Created\"\n        };\n        return axios.post(\"http://localhost:4000/orders/createOrder\", {\n          productInfo,\n          orderInfo\n        }).then(res => {\n          if (res.status === 200) {\n            console.log(res.data);\n          } else {\n            setIsError(true);\n          }\n        }).catch(err => {\n          setIsError(true);\n        });\n      },\n      onSuccess: (details, data) => {\n        alert(\"Transaction completed by \" + details.payer.name.given_name); // OPTIONAL: Call your server to save the transaction\n\n        return axios.post(\"http://localhost:4000/orders/success\", {\n          orderID: data.orderID\n        }).then(res => {\n          if (res.status === 200) {\n            console.log(res.data);\n          } else {\n            setIsError(true);\n          }\n        }).catch(err => {\n          setIsError(true);\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Products Details\"), React.createElement(Accordion, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Product Info\")), React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Name: \", name), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Description: \", description), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Price: $\", price.toFixed(2)), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Stock: \", stock)), stock > 0 && IDTokens ? React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Order This Product\"), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    sm: {\n      span: 6,\n      offset: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"formQuantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Quantity\"), React.createElement(Form.Control, {\n    controlid: \"formQuantity\",\n    type: \"number\",\n    min: \"1\",\n    max: \"5\",\n    step: \"1\",\n    onChange: e => {\n      setQuantity(e.target.value);\n    },\n    placeholder: \"Enter quantity to order (max 5)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }))), quantity !== 0 && paypalBtn()) : \"Cannot order, currently out of stock or user is not currently logged in\")))), React.createElement(Link, {\n    to: `/products/list/${id}/messages/new`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Questions or Comments Regarding this Product? Leave a Message.\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Messages: \"), messages.length > 0 ? messageList() : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"(No messages)\"), isError && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Something went wrong with getting the product or placing the order!\"));\n}\n\nexport default ProductDetails;","map":{"version":3,"sources":["C:/Users/tgoan/Desktop/Web Development/Projects/barnwood/src/components/public-components/productDetails.js"],"names":["React","useState","useEffect","Link","useID","useUserName","useAdmin","PayPalButton","Button","Accordion","Card","ListGroup","Form","Col","axios","ProductDetails","props","isError","setIsError","id","setID","name","setName","description","setDescription","price","setPrice","stock","setStock","quantity","setQuantity","messages","setMessages","IDTokens","userNameTokens","adminTokens","get","match","params","then","res","data","product","_id","catch","err","Message","message","owner","username","content","marginRight","marginLeft","messageList","map","currentMessage","i","paypalBtn","actions","productInfo","orderInfo","status","post","console","log","details","alert","payer","given_name","orderID","toFixed","span","offset","e","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useID, useUserName, useAdmin } from \"../../context/auth\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Button, Accordion, Card, ListGroup, Form, Col } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction ProductDetails(props) {\r\n    const [isError, setIsError] = useState(false);\r\n    const [id, setID] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [price, setPrice] = useState(0);\r\n    const [stock, setStock] = useState(0);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const [messages, setMessages] = useState([]);\r\n    const { IDTokens } = useID();\r\n    const { userNameTokens } = useUserName();\r\n    const { adminTokens } = useAdmin();\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:4000/products/${props.match.params.id}`)\r\n        .then(res => {\r\n            setID(res.data.product._id);\r\n            setName(res.data.product.name);\r\n            setDescription(res.data.product.description);\r\n            setPrice(res.data.product.price);\r\n            setStock(res.data.product.stock);\r\n            setMessages(res.data.messages);\r\n        }).catch(function(err) {\r\n            setIsError(true);\r\n        })\r\n    }, [props, IDTokens]);\r\n\r\n    const Message = props => (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    {props.message.owner.username === \"(User removed)\" ? (\r\n                        <span>{props.message.owner.username}</span>\r\n                    ) : (\r\n                        <Link to={`/users/${props.message.owner.id}`}>{props.message.owner.username}</Link>                        \r\n                    )}\r\n                </Card.Title>\r\n                <Card.Text>\r\n                    {props.message.content}\r\n                </Card.Text>\r\n                {IDTokens === props.message.owner.id || adminTokens ? (\r\n                    <span>\r\n                        <Link  to={`/products/list/${id}/messages/${props.message._id}/edit/`} style={{ marginRight: 10, marginLeft: 10 }}>\r\n                            Edit\r\n                        </Link>\r\n                        <Link to={`/products/list/${id}/messages/${props.message._id}/delete/`}>Delete</Link>\r\n                    </span>\r\n                ) : (\r\n                    <span></span>\r\n                )}\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n\r\n    function messageList() {\r\n        return messages.map(function(currentMessage, i) {\r\n            return <Message message={currentMessage} key={i} />;\r\n        })\r\n    }\r\n\r\n    function paypalBtn() {\r\n        return <PayPalButton\r\n                    amount={price * quantity}\r\n                    // shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\r\n                    createOrder={(data, actions) => {\r\n                        let productInfo = {\r\n                            id,\r\n                            name,\r\n                            description,\r\n                            price,\r\n                            quantity\r\n                        };\r\n            \r\n                        let orderInfo = {\r\n                            owner: {\r\n                                id: IDTokens,\r\n                                username: userNameTokens\r\n                            },\r\n                            status: \"Created\"\r\n                        };\r\n\r\n                        return axios.post(\"http://localhost:4000/orders/createOrder\",\r\n                            {productInfo, orderInfo}\r\n                        ).then((res) => {\r\n                            if(res.status === 200) {\r\n                                console.log(res.data);\r\n                            } else {\r\n                                setIsError(true);\r\n                            }\r\n                        }).catch((err) => {\r\n                            setIsError(true);\r\n                        })\r\n                    }}\r\n                    onSuccess={(details, data) => {\r\n                        alert(\"Transaction completed by \" + details.payer.name.given_name);\r\n\r\n                        // OPTIONAL: Call your server to save the transaction\r\n                        return axios.post(\"http://localhost:4000/orders/success\",\r\n                            {orderID: data.orderID}\r\n                        ).then((res) => {\r\n                            if(res.status === 200) {\r\n                                console.log(res.data);\r\n                            } else {\r\n                                setIsError(true);\r\n                            }\r\n                        }).catch((err) => {\r\n                            setIsError(true);\r\n                        })\r\n                    }}\r\n                />\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h2>Products Details</h2>\r\n            <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                            Product Info\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            <ListGroup>\r\n                                <ListGroup.Item>Name: {name}</ListGroup.Item>\r\n                                <ListGroup.Item>Description: {description}</ListGroup.Item>\r\n                                <ListGroup.Item>Price: ${price.toFixed(2)}</ListGroup.Item>\r\n                                <ListGroup.Item>Stock: {stock}</ListGroup.Item>\r\n                            </ListGroup>\r\n                            {stock > 0 && IDTokens ? (\r\n                                <Form>\r\n                                    <h2>Order This Product</h2>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} sm={{ span: 6, offset: 3 }}>\r\n                                            <Form.Label htmlFor=\"formQuantity\">Quantity</Form.Label>\r\n                                            <Form.Control\r\n                                                        controlid=\"formQuantity\"\r\n                                                        type=\"number\"\r\n                                                        min=\"1\"\r\n                                                        max=\"5\"\r\n                                                        step=\"1\"\r\n                                                        onChange={e => {\r\n                                                            setQuantity(e.target.value);\r\n                                                        }}\r\n                                                        placeholder=\"Enter quantity to order (max 5)\"\r\n                                                        />\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    { quantity !== 0 && paypalBtn()}\r\n                                </Form>\r\n                            ) : (\r\n                                \"Cannot order, currently out of stock or user is not currently logged in\"\r\n                            )}\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n            <Link to={`/products/list/${id}/messages/new`}>Questions or Comments Regarding this Product? Leave a Message.</Link>\r\n            <h3>Messages: </h3>\r\n            {messages.length > 0 ? (\r\n                messageList()\r\n            ) : (\r\n                <p>(No messages)</p>\r\n            )}\r\n            { isError &&<p>Something went wrong with getting the product or placing the order!</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductDetails;"]},"metadata":{},"sourceType":"module"}