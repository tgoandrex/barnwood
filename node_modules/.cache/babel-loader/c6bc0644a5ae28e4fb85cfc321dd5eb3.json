{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tgoan\\\\Desktop\\\\Web Development\\\\Projects\\\\barnwood\\\\src\\\\components\\\\paypalButton.js\";\nimport React from \"react\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport axios from \"axios\";\nimport { ConsoleWriter } from \"istanbul-lib-report\";\n\nfunction PayPalBtn(props) {\n  const productInfo = props.productInfo;\n  const userID = props.id;\n  const username = props.username;\n  let orderID;\n  return React.createElement(PayPalButton, {\n    createOrder: (data, actions) => {\n      axios.post(\"http://localhost:4000/orders/new\", {\n        productInfo,\n        userID,\n        username\n      }).then(res => {\n        if (res.status === 200) {\n          console.log(res.data);\n          orderID = res.data._id;\n          console.log(\"orderID: \", orderID);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            currency_code: \"USD\",\n            value: props.amount\n          }\n        }]\n      });\n    },\n    onSuccess: (details, data) => {\n      alert(\"Transaction completed by \" + details.payer.name.given_name);\n      console.log(\"orderID: \", orderID);\n      return axios.post(\"http://localhost:4000/orders/success\", {\n        data,\n        productInfo,\n        orderID\n      }).then(res => {\n        if (res.status === 200) {\n          console.log(res.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    options: {\n      clientId: \"Aab0HytBSMmwfskLkqetKsqoauh5OeKUp-nMUib58D9Tr4be-Mv7RRU5ws0L2i71D6Cky1MZwRZi55hu\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  });\n}\n\nexport default PayPalBtn;","map":{"version":3,"sources":["C:/Users/tgoan/Desktop/Web Development/Projects/barnwood/src/components/paypalButton.js"],"names":["React","PayPalButton","axios","ConsoleWriter","PayPalBtn","props","productInfo","userID","id","username","orderID","data","actions","post","then","res","status","console","log","_id","catch","err","order","create","purchase_units","amount","currency_code","value","details","alert","payer","name","given_name","clientId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,qBAA9B;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAMC,WAAW,GAAGD,KAAK,CAACC,WAA1B;AACA,QAAMC,MAAM,GAAGF,KAAK,CAACG,EAArB;AACA,QAAMC,QAAQ,GAAGJ,KAAK,CAACI,QAAvB;AACA,MAAIC,OAAJ;AAEE,SACI,oBAAC,YAAD;AACE,IAAA,WAAW,EAAE,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC9BV,MAAAA,KAAK,CAACW,IAAN,CAAW,kCAAX,EACI;AAACP,QAAAA,WAAD;AAAcC,QAAAA,MAAd;AAAsBE,QAAAA;AAAtB,OADJ,EAEEK,IAFF,CAEQC,GAAD,IAAS;AACZ,YAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAuB;AACnBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACJ,IAAhB;AACAD,UAAAA,OAAO,GAAGK,GAAG,CAACJ,IAAJ,CAASQ,GAAnB;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,OAAzB;AACH;AACJ,OARD,EAQGU,KARH,CAQUC,GAAD,IAAS;AACdJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,OAVD;AAWA,aAAOT,OAAO,CAACU,KAAR,CAAcC,MAAd,CAAqB;AAC1BC,QAAAA,cAAc,EAAE,CAAC;AACfC,UAAAA,MAAM,EAAE;AACNC,YAAAA,aAAa,EAAE,KADT;AAENC,YAAAA,KAAK,EAAEtB,KAAK,CAACoB;AAFP;AADO,SAAD;AADU,OAArB,CAAP;AAQD,KArBH;AAuBE,IAAA,SAAS,EAAE,CAACG,OAAD,EAAUjB,IAAV,KAAmB;AAC5BkB,MAAAA,KAAK,CAAC,8BAA8BD,OAAO,CAACE,KAAR,CAAcC,IAAd,CAAmBC,UAAlD,CAAL;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,OAAzB;AAEA,aAAOR,KAAK,CAACW,IAAN,CAAW,sCAAX,EACL;AAACF,QAAAA,IAAD;AAAOL,QAAAA,WAAP;AAAoBI,QAAAA;AAApB,OADK,EAELI,IAFK,CAECC,GAAD,IAAS;AACZ,YAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAuB;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACJ,IAAhB;AACD;AACJ,OANM,EAMJS,KANI,CAMGC,GAAD,IAAS;AAChBJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,OARM,CAAP;AASD,KApCH;AAsCE,IAAA,OAAO,EAAE;AAACY,MAAAA,QAAQ,EAAE;AAAX,KAtCX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AA0CH;;AAED,eAAe7B,SAAf","sourcesContent":["import React from \"react\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport axios from \"axios\";\r\nimport { ConsoleWriter } from \"istanbul-lib-report\";\r\n\r\nfunction PayPalBtn(props) {\r\n  const productInfo = props.productInfo;\r\n  const userID = props.id\r\n  const username = props.username\r\n  let orderID;\r\n\r\n    return (\r\n        <PayPalButton\r\n          createOrder={(data, actions) => {\r\n            axios.post(\"http://localhost:4000/orders/new\",\r\n                {productInfo, userID, username}\r\n            ).then((res) => {\r\n                if(res.status === 200) {\r\n                    console.log(res.data);\r\n                    orderID = res.data._id;\r\n                    console.log(\"orderID: \", orderID)\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n            return actions.order.create({\r\n              purchase_units: [{\r\n                amount: {\r\n                  currency_code: \"USD\",\r\n                  value: props.amount\r\n                }\r\n              }]\r\n            })\r\n          }}\r\n\r\n          onSuccess={(details, data) => {\r\n            alert(\"Transaction completed by \" + details.payer.name.given_name);\r\n            console.log(\"orderID: \", orderID)\r\n\r\n            return axios.post(\"http://localhost:4000/orders/success\",\r\n              {data, productInfo, orderID}\r\n            ).then((res) => {\r\n                if(res.status === 200) {\r\n                  console.log(res.data);\r\n                }\r\n            }).catch((err) => {\r\n              console.log(err);\r\n            });\r\n          }}\r\n\r\n          options={{clientId: \"Aab0HytBSMmwfskLkqetKsqoauh5OeKUp-nMUib58D9Tr4be-Mv7RRU5ws0L2i71D6Cky1MZwRZi55hu\"}}\r\n        />\r\n      );\r\n}\r\n\r\nexport default PayPalBtn;"]},"metadata":{},"sourceType":"module"}