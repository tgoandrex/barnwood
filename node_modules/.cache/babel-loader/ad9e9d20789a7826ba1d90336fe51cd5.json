{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tgoan\\\\Desktop\\\\Web Development\\\\Projects\\\\barnwood\\\\src\\\\components\\\\public-components\\\\userDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useID, useAdmin } from \"../../context/auth\";\nimport ReactPaginate from \"react-paginate\";\nimport { Row, Col, Card, ListGroup } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction UserDetails(props) {\n  const [isError, setIsError] = useState(false);\n  const [id, setID] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [pageCount, setPageCount] = useState(0);\n  const {\n    IDTokens\n  } = useID();\n  const {\n    adminTokens\n  } = useAdmin();\n\n  const Message = props => React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.message.content)));\n\n  const Order = props => React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.order.status, \" Order\"), React.createElement(ListGroup, {\n    variant: \"flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Product Name: \", props.order.product.name), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Product Price: $\", props.order.product.price.toFixed(2)), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Product Quantity: \", props.order.product.quantity), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Order Total: $\", props.order.total.toFixed(2))));\n\n  useEffect(() => {\n    axios.get(`http://localhost:4000/users/${props.match.params.id}`).then(res => {\n      setID(res.data.user._id);\n      setUsername(res.data.user.username);\n      setIsAdmin(res.data.user.isAdmin);\n      setMessages(res.data.messages);\n      setOrders(res.data.orders);\n      setPageCount(Math.ceil(messages.length / 10));\n    }).catch(function (err) {\n      setIsError(true);\n    });\n  }, [props, messages.length]);\n\n  function messageList() {\n    return messages.map(function (currentMessage, i) {\n      return React.createElement(Message, {\n        message: currentMessage,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    });\n  }\n\n  function orderList() {\n    return orders.map(function (currentOrder, i) {\n      return React.createElement(Order, {\n        order: currentOrder,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, username, \" \", isAdmin ? \"(Admin)\" : \"(User)\"), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: {\n      span: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Active Messages\"), messages.length > 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, messageList(), React.createElement(ReactPaginate, {\n    pageCount: pageCount,\n    marginPagesDisplayed: 2,\n    pageRangeDisplayed: 5,\n    previousLabel: 'previous',\n    nextLabel: 'next',\n    breakLabel: '...',\n    breakClassName: 'break-me',\n    containerClassName: 'pagination',\n    subContainerClassName: 'pages pagination',\n    activeClassName: 'active',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"(No active messages)\")), React.createElement(Col, {\n    md: {\n      span: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Active Orders\"), orders.length > 0 ? IDTokens === id || adminTokens ? orderList() : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"(You do not have access to this user's orders)\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"(No active orders)\"))), isError && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Something went wrong with getting the user details!\"));\n}\n\nexport default UserDetails;","map":{"version":3,"sources":["C:/Users/tgoan/Desktop/Web Development/Projects/barnwood/src/components/public-components/userDetails.js"],"names":["React","useState","useEffect","useID","useAdmin","ReactPaginate","Row","Col","Card","ListGroup","axios","UserDetails","props","isError","setIsError","id","setID","username","setUsername","isAdmin","setIsAdmin","messages","setMessages","orders","setOrders","pageCount","setPageCount","IDTokens","adminTokens","Message","message","content","Order","order","status","product","name","price","toFixed","quantity","total","get","match","params","then","res","data","user","_id","Math","ceil","length","catch","err","messageList","map","currentMessage","i","orderList","currentOrder","span"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useID, useAdmin } from \"../../context/auth\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport { Row, Col, Card, ListGroup } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction UserDetails(props) {\r\n    const [isError, setIsError] = useState(false);\r\n    const [id, setID] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n    const [orders, setOrders] = useState([]);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const { IDTokens } = useID();\r\n    const { adminTokens } = useAdmin();\r\n\r\n    const Message = props => (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Text>\r\n                    {props.message.content}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n\r\n    const Order = props => (\r\n        <Card>\r\n                <Card.Header>{props.order.status} Order</Card.Header>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>Product Name: {props.order.product.name}</ListGroup.Item>\r\n                    <ListGroup.Item>Product Price: ${props.order.product.price.toFixed(2)}</ListGroup.Item>\r\n                    <ListGroup.Item>Product Quantity: {props.order.product.quantity}</ListGroup.Item>\r\n                    <ListGroup.Item>Order Total: ${props.order.total.toFixed(2)}</ListGroup.Item>\r\n                </ListGroup>\r\n        </Card>\r\n    )\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:4000/users/${props.match.params.id}`)\r\n        .then(res => {\r\n            setID(res.data.user._id)\r\n            setUsername(res.data.user.username);\r\n            setIsAdmin(res.data.user.isAdmin);\r\n            setMessages(res.data.messages);\r\n            setOrders(res.data.orders);\r\n\r\n            setPageCount(Math.ceil(messages.length / 10))\r\n        }).catch(function(err) {\r\n            setIsError(true);\r\n        })\r\n    }, [props, messages.length]);\r\n\r\n    function messageList() {\r\n        return messages.map(function(currentMessage, i){\r\n            return <Message message={currentMessage} key={i} />;\r\n        })\r\n    }\r\n\r\n    function orderList() {\r\n        return orders.map(function(currentOrder, i){\r\n            return <Order order={currentOrder} key={i} />;\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h2>{username} {isAdmin ? ( \"(Admin)\" ) : ( \"(User)\" )}</h2>\r\n\r\n            <Row>\r\n                <Col md={{ span: 6 }}>\r\n                    <h3>Active Messages</h3>\r\n                    {messages.length > 0 ? (\r\n                        <div>\r\n                            {messageList()}\r\n                            <ReactPaginate\r\n                                pageCount={pageCount}\r\n                                marginPagesDisplayed={2}\r\n                                pageRangeDisplayed={5}\r\n                                previousLabel={'previous'}\r\n                                nextLabel={'next'}\r\n                                breakLabel={'...'}\r\n                                breakClassName={'break-me'}\r\n                                containerClassName={'pagination'}\r\n                                subContainerClassName={'pages pagination'}\r\n                                activeClassName={'active'}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <p>(No active messages)</p>\r\n                    )}\r\n                </Col>\r\n                <Col md={{ span: 6 }}>\r\n                    <h3>Active Orders</h3>\r\n                    {orders.length > 0 ? (\r\n                        IDTokens === id || adminTokens ? (\r\n                            orderList()\r\n                        ) : (\r\n                            <p>(You do not have access to this user's orders)</p>\r\n                        )\r\n                    ) : (\r\n                        <p>(No active orders)</p>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n            { isError &&<p>Something went wrong with getting the user details!</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDetails;"]},"metadata":{},"sourceType":"module"}