{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tgoan\\\\Desktop\\\\Web Development\\\\Projects\\\\barnwood\\\\src\\\\components\\\\admin-components\\\\productEdit.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Col, Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction ProductEdit(props) {\n  const [isError, setIsError] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [stock, setStock] = useState(0);\n  useEffect(() => {\n    axios.get(`http://localhost:4000/products/${this.props.match.params.id}`).then(res => {\n      this.setState({\n        name: res.data.name,\n        description: res.data.description,\n        price: res.data.price,\n        stock: res.data.stock\n      });\n    }).catch(function (err) {\n      setIsError(true);\n    });\n  }, []);\n\n  function postProduct() {\n    const updatedProduct = {\n      name,\n      description,\n      price,\n      stock\n    };\n    axios.put(`http://localhost:4000/products/${this.props.match.params.id}`, updatedProduct).then(res => {\n      if (res.status === 200) {\n        console.log(res.data);\n      } else {\n        setIsError(true);\n      }\n    }).catch(err => {\n      setIsError(true);\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Edit Product\"), React.createElement(Form, {\n    onSubmit: this.onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    sm: {\n      span: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"formName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Form.Control, {\n    controlid: \"formName\",\n    type: \"text\",\n    value: name,\n    onChange: e => {\n      setName(e.target.value);\n    },\n    placeholder: \"Enter name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    sm: {\n      span: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"formDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Description\"), React.createElement(Form.Control, {\n    controlid: \"formDescription\",\n    type: \"text\",\n    value: description,\n    onChange: e => {\n      setDescription(e.target.value);\n    },\n    placeholder: \"Enter description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))), React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    sm: {\n      span: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"formPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Price\"), React.createElement(Form.Control, {\n    controlid: \"formPrice\",\n    type: \"number\",\n    min: \"0\",\n    max: \"9999\",\n    step: \".01\",\n    value: price,\n    onChange: e => {\n      setPrice(e.target.value);\n    },\n    placeholder: \"Enter price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    sm: {\n      span: 4,\n      offset: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"formStock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Stock\"), React.createElement(Form.Control, {\n    controlid: \"formStock\",\n    type: \"number\",\n    min: \"0\",\n    max: \"9999\",\n    step: \"1\",\n    value: stock,\n    onChange: e => {\n      setStock(e.target.value);\n    },\n    placeholder: \"Enter stock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    onClick: postProduct,\n    variant: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Edit Product\"), isError && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Something went wrong with editing the product!\")));\n}\n\nexport default ProductEdit;","map":{"version":3,"sources":["C:/Users/tgoan/Desktop/Web Development/Projects/barnwood/src/components/admin-components/productEdit.js"],"names":["React","useState","useEffect","Col","Form","Button","axios","ProductEdit","props","isError","setIsError","name","setName","description","setDescription","price","setPrice","stock","setStock","get","match","params","id","then","res","setState","data","catch","err","postProduct","updatedProduct","put","status","console","log","onSubmit","span","e","target","value","offset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Col, Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction ProductEdit(props) {\r\n    const [isError, setIsError] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [price, setPrice] = useState(0);\r\n    const [stock, setStock] = useState(0);\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:4000/products/${this.props.match.params.id}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    name: res.data.name,\r\n                    description: res.data.description,\r\n                    price: res.data.price,\r\n                    stock: res.data.stock\r\n                })  \r\n            }).catch(function (err) {\r\n                setIsError(true);\r\n            })\r\n        }, []);\r\n\r\n    function postProduct() {\r\n        const updatedProduct = {\r\n            name,\r\n            description,\r\n            price,\r\n            stock\r\n        };\r\n\r\n        axios.put(`http://localhost:4000/products/${this.props.match.params.id}`, updatedProduct)\r\n        .then(res => {\r\n            if(res.status === 200) {\r\n                console.log(res.data);\r\n            } else {\r\n                setIsError(true);\r\n            }\r\n        }).catch(err => {\r\n            setIsError(true);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h2>Edit Product</h2>\r\n            <Form onSubmit={this.onSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} sm={{ span: 6 }}>\r\n                        <Form.Label htmlFor=\"formName\">Name</Form.Label>\r\n                        <Form.Control\r\n                                    controlid=\"formName\"\r\n                                    type=\"text\" \r\n                                    value={name}\r\n                                    onChange={e => {\r\n                                        setName(e.target.value);\r\n                                    }}\r\n                                    placeholder=\"Enter name\"\r\n                                    />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} sm={{ span: 6 }}>\r\n                        <Form.Label htmlFor=\"formDescription\">Description</Form.Label>\r\n                        <Form.Control\r\n                                    controlid=\"formDescription\"\r\n                                    type=\"text\" \r\n                                    value={description}\r\n                                    onChange={e => {\r\n                                        setDescription(e.target.value);\r\n                                    }}\r\n                                    placeholder=\"Enter description\"\r\n                                    />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} sm={{ span: 4 }}>\r\n                        <Form.Label htmlFor=\"formPrice\">Price</Form.Label>\r\n                        <Form.Control\r\n                                    controlid=\"formPrice\"\r\n                                    type=\"number\"\r\n                                    min=\"0\"\r\n                                    max=\"9999\"\r\n                                    step=\".01\"\r\n                                    value={price}\r\n                                    onChange={e => {\r\n                                        setPrice(e.target.value);\r\n                                    }}\r\n                                    placeholder=\"Enter price\"\r\n                                    />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} sm={{ span: 4, offset: 4 }}>\r\n                        <Form.Label htmlFor=\"formStock\">Stock</Form.Label>\r\n                        <Form.Control\r\n                                    controlid=\"formStock\"\r\n                                    type=\"number\"\r\n                                    min=\"0\"\r\n                                    max=\"9999\"\r\n                                    step=\"1\"\r\n                                    value={stock}\r\n                                    onChange={e => {\r\n                                        setStock(e.target.value);\r\n                                    }}\r\n                                    placeholder=\"Enter stock\"\r\n                                    />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button onClick={postProduct} variant=\"warning\">Edit Product</Button>\r\n                { isError &&<p>Something went wrong with editing the product!</p> }\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductEdit;"]},"metadata":{},"sourceType":"module"}