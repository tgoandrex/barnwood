{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tgoan\\\\Desktop\\\\Web Development\\\\Projects\\\\barnwood\\\\src\\\\components\\\\public-components\\\\userDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useID, useAdmin } from \"../../context/auth\";\nimport Pagination from \"react-js-pagination\";\nimport { Row, Col, Card, ListGroup } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction UserDetails(props) {\n  const [isError, setIsError] = useState(false);\n  const [id, setID] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const {\n    IDTokens\n  } = useID();\n  const {\n    adminTokens\n  } = useAdmin(); // Pagination variables Products\n\n  const [activePageProducts, setActivePageProducts] = useState(1);\n  const messagesPerPage = 11;\n  const indexOfLastMessage = activePageProducts * messagesPerPage;\n  const indexOfFirstMessage = indexOfLastMessage - messagesPerPage;\n  const currentMessages = messages.slice(indexOfFirstMessage, indexOfLastMessage); // Pagination variables Orders\n\n  const [activePageOrders, setActivePageOrders] = useState(1);\n  const ordersPerPage = 3;\n  const indexOfLastOrder = activePageOrders * ordersPerPage;\n  const indexOfFirstOrder = indexOfLastOrder - ordersPerPage;\n  const currentOrders = orders.slice(indexOfFirstOrder, indexOfLastOrder);\n\n  const Message = props => React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Card.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.message.content)));\n\n  const Order = props => React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.order.status, \" Order\"), React.createElement(ListGroup, {\n    variant: \"flush\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Product Name: \", props.order.product.name), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Product Price: $\", props.order.product.price.toFixed(2)), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Product Quantity: \", props.order.product.quantity), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Order Total: $\", props.order.total.toFixed(2))));\n\n  useEffect(() => {\n    axios.get(`http://localhost:4000/users/${props.match.params.id}`).then(res => {\n      setID(res.data.user._id);\n      setUsername(res.data.user.username);\n      setIsAdmin(res.data.user.isAdmin);\n      setMessages(res.data.messages);\n      setOrders(res.data.orders);\n    }).catch(function (err) {\n      setIsError(true);\n    });\n  }, [props]);\n\n  function messageList() {\n    return currentMessages.map(function (message, i) {\n      return React.createElement(Message, {\n        message: message,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    });\n  }\n\n  function orderList() {\n    return currentOrders.map(function (order, i) {\n      return React.createElement(Order, {\n        order: order,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    });\n  }\n\n  function handlePageChangeProducts(pageNumber) {\n    setActivePageProducts(pageNumber);\n  }\n\n  function handlePageChangeOrders(pageNumber) {\n    setActivePageOrders(pageNumber);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, username, \" \", isAdmin ? \"(Admin)\" : \"(User)\"), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: {\n      span: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Active Messages\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, messageList(), messages.length > messagesPerPage && React.createElement(Pagination, {\n    activePage: activePageProducts,\n    itemsCountPerPage: messagesPerPage,\n    totalItemsCount: messages.length,\n    pageRangeDisplayed: 3,\n    onChange: handlePageChangeProducts.bind(this),\n    itemClass: \"page-item\",\n    linkClass: \"page-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    md: {\n      span: 6\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Active Orders\"), orders.length > 0 ? IDTokens === id || adminTokens ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, orderList(), orders.length > ordersPerPage && React.createElement(Pagination, {\n    activePage: activePageOrders,\n    itemsCountPerPage: ordersPerPage,\n    totalItemsCount: orders.length,\n    pageRangeDisplayed: 3,\n    onChange: handlePageChangeOrders.bind(this),\n    itemClass: \"page-item\",\n    linkClass: \"page-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"(You do not have access to this user's orders)\") : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"(No active orders)\"))), isError && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Something went wrong with getting the user details!\"));\n}\n\nexport default UserDetails;","map":{"version":3,"sources":["C:/Users/tgoan/Desktop/Web Development/Projects/barnwood/src/components/public-components/userDetails.js"],"names":["React","useState","useEffect","useID","useAdmin","Pagination","Row","Col","Card","ListGroup","axios","UserDetails","props","isError","setIsError","id","setID","username","setUsername","isAdmin","setIsAdmin","messages","setMessages","orders","setOrders","IDTokens","adminTokens","activePageProducts","setActivePageProducts","messagesPerPage","indexOfLastMessage","indexOfFirstMessage","currentMessages","slice","activePageOrders","setActivePageOrders","ordersPerPage","indexOfLastOrder","indexOfFirstOrder","currentOrders","Message","message","content","Order","order","status","product","name","price","toFixed","quantity","total","get","match","params","then","res","data","user","_id","catch","err","messageList","map","i","orderList","handlePageChangeProducts","pageNumber","handlePageChangeOrders","span","length","bind"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useID, useAdmin } from \"../../context/auth\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport { Row, Col, Card, ListGroup } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction UserDetails(props) {\r\n    const [isError, setIsError] = useState(false);\r\n    const [id, setID] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n    const [orders, setOrders] = useState([]);\r\n    const { IDTokens } = useID();\r\n    const { adminTokens } = useAdmin();\r\n\r\n    // Pagination variables Products\r\n    const [activePageProducts, setActivePageProducts] = useState(1);\r\n    const messagesPerPage = 11;\r\n    const indexOfLastMessage = activePageProducts * messagesPerPage;\r\n    const indexOfFirstMessage = indexOfLastMessage - messagesPerPage;\r\n    const currentMessages = messages.slice(indexOfFirstMessage, indexOfLastMessage);\r\n\r\n    // Pagination variables Orders\r\n    const [activePageOrders, setActivePageOrders] = useState(1);\r\n    const ordersPerPage = 3;\r\n    const indexOfLastOrder = activePageOrders * ordersPerPage;\r\n    const indexOfFirstOrder = indexOfLastOrder - ordersPerPage;\r\n    const currentOrders = orders.slice(indexOfFirstOrder, indexOfLastOrder);\r\n\r\n    const Message = props => (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Text>\r\n                    {props.message.content}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n\r\n    const Order = props => (\r\n        <Card>\r\n                <Card.Header>{props.order.status} Order</Card.Header>\r\n                <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>Product Name: {props.order.product.name}</ListGroup.Item>\r\n                    <ListGroup.Item>Product Price: ${props.order.product.price.toFixed(2)}</ListGroup.Item>\r\n                    <ListGroup.Item>Product Quantity: {props.order.product.quantity}</ListGroup.Item>\r\n                    <ListGroup.Item>Order Total: ${props.order.total.toFixed(2)}</ListGroup.Item>\r\n                </ListGroup>\r\n        </Card>\r\n    )\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:4000/users/${props.match.params.id}`)\r\n        .then(res => {\r\n            setID(res.data.user._id)\r\n            setUsername(res.data.user.username);\r\n            setIsAdmin(res.data.user.isAdmin);\r\n            setMessages(res.data.messages);\r\n            setOrders(res.data.orders);\r\n        }).catch(function(err) {\r\n            setIsError(true);\r\n        })\r\n    }, [props]);\r\n\r\n    function messageList() {\r\n        return currentMessages.map(function(message, i) {\r\n            return <Message message={message} key={i} />;\r\n        })\r\n    }\r\n\r\n    function orderList() {\r\n        return currentOrders.map(function(order, i){\r\n            return <Order order={order} key={i} />;\r\n        })\r\n    }\r\n\r\n    function handlePageChangeProducts(pageNumber) {\r\n        setActivePageProducts(pageNumber);\r\n    }\r\n\r\n    function handlePageChangeOrders(pageNumber) {\r\n        setActivePageOrders(pageNumber);\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h2>{username} {isAdmin ? ( \"(Admin)\" ) : ( \"(User)\" )}</h2>\r\n            <Row>\r\n                <Col md={{ span: 6 }}>\r\n                    <h3>Active Messages</h3>\r\n                    <div>\r\n                        {messageList()}\r\n                        {messages.length > messagesPerPage &&\r\n                            <Pagination\r\n                                activePage={activePageProducts}\r\n                                itemsCountPerPage={messagesPerPage}\r\n                                totalItemsCount={messages.length}\r\n                                pageRangeDisplayed={3}\r\n                                onChange={handlePageChangeProducts.bind(this)}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        }\r\n                    </div>\r\n                </Col>\r\n                <Col md={{ span: 6 }}>\r\n                    <h3>Active Orders</h3>\r\n                    {orders.length > 0 ? (\r\n                        IDTokens === id || adminTokens ? (\r\n                            <div>\r\n                                {orderList()}\r\n                                {orders.length > ordersPerPage &&\r\n                                    <Pagination\r\n                                        activePage={activePageOrders}\r\n                                        itemsCountPerPage={ordersPerPage}\r\n                                        totalItemsCount={orders.length}\r\n                                        pageRangeDisplayed={3}\r\n                                        onChange={handlePageChangeOrders.bind(this)}\r\n                                        itemClass=\"page-item\"\r\n                                        linkClass=\"page-link\"\r\n                                    />\r\n                                }\r\n                            </div>\r\n                        ) : (\r\n                            <p>(You do not have access to this user's orders)</p>\r\n                        )\r\n                    ) : (\r\n                        <p>(No active orders)</p>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n            { isError &&<p>Something went wrong with getting the user details!</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserDetails;"]},"metadata":{},"sourceType":"module"}