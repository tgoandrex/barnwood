{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tgoan\\\\Desktop\\\\Web Development\\\\Projects\\\\barnwood\\\\src\\\\components\\\\private-components\\\\messageEdit.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Col, Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction MessageEdit(props) {\n  const [messageIsEdited, setMessageIsEdited] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [content, setContent] = useState(\"\");\n  useEffect(() => {\n    axios.get(`http://localhost:4000/messages/${props.match.params.message_id}`).then(res => {\n      setContent(res.data.content);\n    }).catch(function (err) {\n      setIsError(true);\n    });\n  }, [props]);\n\n  function postMessage() {\n    const updatedMessage = {\n      content\n    };\n    axios.put(`http://localhost:4000/messages/${props.match.params.message_id}`, updatedMessage).then(res => {\n      if (res.status === 200) {\n        console.log(res.data);\n        setMessageIsEdited(true);\n      } else {\n        setIsError(true);\n      }\n    }).catch(err => {\n      setIsError(true);\n    });\n  }\n\n  if (messageIsEdited) {\n    return React.createElement(Redirect, {\n      to: \"/products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Edit Message\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    sm: {\n      span: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    htmlFor: \"formContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Body\"), React.createElement(Form.Control, {\n    controlid: \"formContent\",\n    type: \"text\",\n    value: content,\n    onChange: e => {\n      setContent(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    onClick: postMessage,\n    variant: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Edit Message\"), isError && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Something went wrong with editing the message!\")));\n}\n\nexport default MessageEdit;","map":{"version":3,"sources":["C:/Users/tgoan/Desktop/Web Development/Projects/barnwood/src/components/private-components/messageEdit.js"],"names":["React","useState","useEffect","Redirect","Col","Form","Button","axios","MessageEdit","props","messageIsEdited","setMessageIsEdited","isError","setIsError","content","setContent","get","match","params","message_id","then","res","data","catch","err","postMessage","updatedMessage","put","status","console","log","span","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Col, Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction MessageEdit(props) {\r\n    const [messageIsEdited, setMessageIsEdited] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [content, setContent] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:4000/messages/${props.match.params.message_id}`)\r\n        .then(res => {\r\n            setContent(res.data.content);\r\n        }).catch(function(err) {\r\n            setIsError(true);\r\n        })\r\n    }, [props]);\r\n\r\n    function postMessage() {\r\n        const updatedMessage = {\r\n            content\r\n        };\r\n\r\n        axios.put(`http://localhost:4000/messages/${props.match.params.message_id}`,\r\n            updatedMessage\r\n        ).then(res => {\r\n            if(res.status === 200) {\r\n                console.log(res.data);\r\n                setMessageIsEdited(true);\r\n            } else {\r\n                setIsError(true);\r\n            }\r\n        }).catch(err => {\r\n            setIsError(true);\r\n        });\r\n    }\r\n\r\n    if(messageIsEdited) {\r\n        return <Redirect to={\"/products\"} />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h2>Edit Message</h2>\r\n            <Form>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} sm={{ span: 12 }}>\r\n                        <Form.Label htmlFor=\"formContent\">Body</Form.Label>\r\n                        <Form.Control\r\n                                    controlid=\"formContent\"\r\n                                    type=\"text\" \r\n                                    value={content}\r\n                                    onChange={e => {\r\n                                        setContent(e.target.value);\r\n                                    }}\r\n                                    />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button onClick={postMessage} variant=\"warning\">Edit Message</Button>\r\n                { isError &&<p>Something went wrong with editing the message!</p> }\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageEdit;"]},"metadata":{},"sourceType":"module"}