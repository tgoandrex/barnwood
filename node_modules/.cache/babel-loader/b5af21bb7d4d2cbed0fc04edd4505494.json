{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tgoan\\\\Desktop\\\\Web Development\\\\Projects\\\\barnwood\\\\src\\\\components\\\\admin-components\\\\orderDetails.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Card, ListGroup, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nfunction OrderDetails(props) {\n  const [orderIsCompleted, setOrderIsCompleted] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const [transaction, setTransaction] = useState({});\n  useEffect(() => {\n    axios.get(`http://localhost:4000/orders/${props.match.params.id}`).then(res => {\n      setStatus(res.data.order.status);\n      setTransaction(res.data.transaction);\n    }).catch(function (err) {\n      setIsError(true);\n    });\n  }, [props]);\n\n  function postOrder() {\n    axios.put(`http://localhost:4000/orders/${props.match.params.id}`).then(res => {\n      if (res.status === 200) {\n        console.log(res.data);\n        setOrderIsCompleted(true);\n      } else {\n        setIsError(true);\n      }\n    }).catch(err => {\n      setIsError(true);\n    });\n  }\n\n  if (orderIsCompleted) {\n    return React.createElement(Redirect, {\n      to: \"/orders\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Order Details\"), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Status: \", status), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Transaction details: \", JSON.stringify(transaction.details))))), status !== \"Completed\" && React.createElement(Button, {\n    onClick: postOrder,\n    variant: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Complete Order\"), isError && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Something went wrong with getting the order!\"));\n}\n\nexport default OrderDetails;","map":{"version":3,"sources":["C:/Users/tgoan/Desktop/Web Development/Projects/barnwood/src/components/admin-components/orderDetails.js"],"names":["React","useState","useEffect","Redirect","Card","ListGroup","Button","axios","OrderDetails","props","orderIsCompleted","setOrderIsCompleted","isError","setIsError","status","setStatus","transaction","setTransaction","get","match","params","id","then","res","data","order","catch","err","postOrder","put","console","log","JSON","stringify","details"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Card, ListGroup, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nfunction OrderDetails(props) {\r\n    const [orderIsCompleted, setOrderIsCompleted] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [status, setStatus] = useState(\"\");\r\n    const [transaction, setTransaction] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:4000/orders/${props.match.params.id}`)\r\n        .then(res => {\r\n            setStatus(res.data.order.status);\r\n            setTransaction(res.data.transaction);\r\n        }).catch(function(err) {\r\n            setIsError(true);\r\n        })\r\n    }, [props]);\r\n\r\n    function postOrder() {\r\n        axios.put(`http://localhost:4000/orders/${props.match.params.id}`,\r\n        ).then(res => {\r\n            if(res.status === 200) {\r\n                console.log(res.data);\r\n                setOrderIsCompleted(true);\r\n            } else {\r\n                setIsError(true);\r\n            }\r\n        }).catch(err => {\r\n            setIsError(true);\r\n        });\r\n    }\r\n\r\n    if(orderIsCompleted) {\r\n        return <Redirect to={\"/orders\"} />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h2>Order Details</h2>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>Status: {status}</ListGroup.Item>\r\n                            <ListGroup.Item>Transaction details: {JSON.stringify(transaction.details)}</ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card.Body>\r\n                </Card>\r\n                {status !== \"Completed\" && <Button onClick={postOrder} variant=\"success\">Complete Order</Button>}\r\n            { isError &&<p>Something went wrong with getting the order!</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderDetails;"]},"metadata":{},"sourceType":"module"}